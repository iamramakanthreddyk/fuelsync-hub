openapi: 3.0.0
info:
  title: FuelSync Hub API
  description: API for FuelSync Hub multi-tenant fuel station ERP
  version: 0.3.0
  
servers:
  - url: /api
    description: API base path

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
  
  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        code:
          type: string
          description: Error code for programmatic handling
        message:
          type: string
          description: Human-readable error message
      required:
        - status
        - message
    
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password
    
    LoginResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            token:
              type: string
              description: JWT token with Bearer prefix
            user:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                email:
                  type: string
                  format: email
                role:
                  type: string
                  enum: [owner, manager, employee]
                tenant_id:
                  type: string
                  format: uuid
                tenant_name:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
      required:
        - status
        - data
    
    RegisterRequest:
      type: object
      properties:
        name:
          type: string
          description: Tenant name
        email:
          type: string
          format: email
          description: Owner email
        password:
          type: string
          format: password
          description: Owner password
        planType:
          type: string
          enum: [basic, premium, enterprise]
          description: Subscription plan type
      required:
        - name
        - email
        - password
        - planType
    
    RegisterResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            message:
              type: string
            tenant:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
                planType:
                  type: string
                  enum: [basic, premium, enterprise]
      required:
        - status
        - data
    
    UserResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                email:
                  type: string
                  format: email
                role:
                  type: string
                  enum: [owner, manager, employee]
                tenant_id:
                  type: string
                  format: uuid
                tenant_name:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                active:
                  type: boolean
      required:
        - status
        - data

paths:
  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many login attempts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/register:
    post:
      summary: Register a new tenant and owner
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Tenant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/me:
    get:
      summary: Get current authenticated user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/logout:
    post:
      summary: Logout current user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    type: object
                    properties:
                      message:
                        type: string
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /admin/login:
    post:
      summary: Admin login
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'